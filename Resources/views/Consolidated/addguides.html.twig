{% extends '::newbase.html.twig' %}

{% block title %}
    <title>{% trans %}Consolidar{% endtrans %} {% trans %}Guías{% endtrans %}</title>
{% endblock %}

{% block body -%}
{% set guidelist = '["'~ entity.id ~'"]'%}

<div class="page-aside app filters">
    <div class="content">
        <button data-target=".app-nav" data-toggle="collapse" type="button" class="navbar-toggle"><span class="fa fa-chevron-down"></span></button>
        <h2 class="page-title">Filtros</h2>
        <p class="description">Buscador Avanzado</p>
    </div>
    <div class="app-nav collapse">
        <div class="content">
            <div class="form-group">
                <label class="control-label">Desde:</label>
                <div data-min-view="2" data-date-format="mm/dd/yyyy" class="input-group date datetime">
                    <input id="mindate" size="16" type="text" value="" class="form-control"><span class="input-group-addon btn btn-primary"><span class="glyphicon glyphicon-th"></span></span>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label">Hasta:</label>
                <div data-min-view="2" data-date-format="mm/dd/yyyy" class="input-group date datetime">
                    <input id="maxdate" size="16" type="text" value="" class="form-control"><span class="input-group-addon btn btn-primary"><span class="glyphicon glyphicon-th"></span></span>
                </div>
            </div>
            {% if app.user.agency.type == "MASTER" %}
            <div class="form-group">
                <label class="control-label">Agencia:</label>
                <select id="findAgency" class="select2">
                    <option value="Todas">Todas</option>
                    {% for agency in agencies %}
                        <option value="{{ agency.name }}">{{ agency.name }}</option>
                    {% endfor %}
                </select>
            </div>
            {% endif %}
        </div>
    </div>
</div>
<div id="pcont" class="container-fluid">
    <div class="page-head">
        <h2>Agregar {% trans %}Guías{% endtrans %} al {% trans %}Consolidado{% endtrans %} {{ entity.number }}</h2>
            <ol class="breadcrumb">
            <li><a href="{{ url('homepage') }}">Home</a></li>
            <li><a href="{{ url('consolidated') }}">{% trans %}Consolidados{% endtrans %}</a></li>
            <li class="active">Listar</li>
            </ol>
            {% for flashMessage in app.session.flashbag.get('notice') %}
                <div class="alert alert-danger">
                    <strong>Advertencia: </strong>{{ flashMessage }}
                </div>
            {% endfor %}
    </div>
    <div class="cl-mcont">
        <div class="block-flat" style=" padding-top: 0px;">
            <div class="header">
                <h3>Búsqueda</h3>
                <input type="text" id="globalfilter" placeholder="Número de {% trans %}Guía{% endtrans %}/ Remitente/ Destinatario" class="form-control">
                
                <div class="options">
                    <div class="form-group">
                        <label class="radio-inline">
                            <button type="button" class="btn btn-default btn-flat bconsol">Agregar a {% trans %}Consolidado{% endtrans %}</button>
                        </label>
                        <label class="radio-inline">
                            <button type="button" onClick="history.go(-1);return true;" class="btn btn-default bback" >Regresar</button>
                        </label>
                    </div>
                </div>
            </div>
            <div class="content" style=" padding-top: 0px;">
                <div class="filters" style="padding-top: 5px;" >
                    <input id="check-all" type="checkbox" name="checkall" class="icheck"><span> Todas</span>
                    <p style="display:inline; margin: 5px;"> </p>
                    <input id="check-none" type="checkbox" name="checknone" class="icheck"><span> Ninguna</span>
                </div>
                
                <div id="mydiv" style="width:70%">
                    <table id="guideTable" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>Agregar</th>
                            <th>Id</th>
                            <th>Número</th>
                            <th>Remitente</th>
                            <th>Destinatario</th>
                            <th>Fecha</th>
                            <th>Peso ({% trans %}peso{% endtrans %})</th>
                            <th>Agencia</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for guide in listguides %}
                            {% if guide.bag is null %}
                            <tr>
                                <td> <input type="checkbox" class="checkclass icheck" name="marcar" value="consol"> </td>
                                <td>{{ guide.id }}</td>
                                <td>{{ guide.number }}</td>
                                <td>{{ guide.sender }}</td>
                                <td>{{ guide.addressee.name }} {{ guide.addressee.lastname }}</td>
                                <td>{{ guide.creationdate|date('m/d/Y') }}</td>
                                <td>{{ guide.realweight }}</td>
                                <td>{{ guide.agency }}</td>
                            </tr>
                            {% endif %}
                        {% endfor %}
                    </tbody>
                    </table>
                </div>
            </div>
            </div>

            <!-- Modal -->
            <div class="modal fade colored-header md-effect-9" id="consolguides" role="dialog">
                <div class="modal-dialog">
                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header" style="padding-bottom: 0px;"">
                            <button id="closeconsol" type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">
                            <center>Confirme la inclusión de {% trans %}Guías{% endtrans %}</center></h4>
                        </div>
                        <div class="modal-body">
                            <table id="guideTable1" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>Número</th>
                                    <th>Remitente</th>
                                    <th>Destinatario</th>
                                    <th>Fecha</th>
                                    <th>Peso({% trans %}peso{% endtrans %})</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                            </table>
                        </div>
                        <div class="modal-footer">
                            <button id="closeconsol" type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                            <button type="button" class="btn btn-success btn-flat gotoconsol">Confirmar</button>
                        </div>
                    </div>
                </div>
            </div> <!-- MODAL END -->
        </div>
    </div>
</div>
{% endblock %}
{% block javascripts %}
<script type="text/javascript">
    function formatDate(date) {
        var monthNames = [
            "Enero", "Febrero", "Marzo",
            "Abril", "Mayo", "Junio", "Julio",
            "Agosto", "Septiembre", "Octubre",
            "Noviembre", "Diciembre"
        ];

        var day = date.getDate();
        var monthIndex = date.getMonth();
        var year = date.getFullYear();

        return day + ' de ' + monthNames[monthIndex] + ' ' + year;
    }
    function searchBis(str_search) {
        var ret = $($.parseHTML(str_search)).text().toLowerCase();
        return ret.indexOf($('#globalfilter').val().toLowerCase()) != -1;
    }
    $.fn.dataTable.ext.search.push(
        function( settings, data, dataIndex ) {
        if ($('#globalfilter').val().trim() != '') {
            var ret0 = searchBis(data[2]);
            var ret2 = searchBis(data[3]);
            var ret3 = searchBis(data[4]);
            return ( ret0 || ret2 || ret3);
            //return ( ret0 || ret2 );
        } else {
            return true;
        }

    });
    $.fn.dataTableExt.afnFiltering.push(
        function( oSettings, aData, iDataIndex ) {
            var iFini = document.getElementById('mindate').value;
            var iFfin = document.getElementById('maxdate').value;
            var iStartDateCol = 5;
            var iEndDateCol = 5;
            iFini=iFini.substring(6,10) + iFini.substring(0,2)+ iFini.substring(3,5);
            iFfin=iFfin.substring(6,10) + iFfin.substring(0,2)+ iFfin.substring(3,5);
            var datofini=aData[iStartDateCol].substring(6,10) + aData[iStartDateCol].substring(0,2)+ aData[iStartDateCol].substring(3,5);
            var datoffin= datofini;

            if ( iFini === "" && iFfin === "" ) {
                return true;
            } else if ( iFini <= datofini && iFfin === "") {
                return true;
            } else if ( iFfin >= datoffin && iFini === "") {
                return true;
            } else if (iFini <= datofini && iFfin >= datoffin) {
                return true;
            }
            return false;
        }
    );
    $(document).ready(function () {
        thisGuideTable=$('#guideTable').DataTable({
            "ordering": true,
            "searching": true,
            "info":     false,
            "lengthChange": true,
            "scrollX": true,
            "pageLength": 10,
            "lengthMenu": [[5,10, 15, 20, 25, 30, -1], [5,10, 15, 20, 25, 30, "Todos"]],
            "columns": [ {"searchable": false}, {"searchable": false}, null, null, null, null, {"searchable": false}, null ],
            "columnDefs": [
                {% if app.user.agency.type != "MASTER" %}
                    {
                        "targets": [ 7 ],
                        "visible": false,
                        "searchable": true
                    },
                {% endif %}
                {
                        "targets": [ 1 ],
                        "visible": false,
                        "searchable": false, 
                },
            ],
            "language": {
                "sSearch": "Buscar",
                "lengthMenu": 'Mostrando  _MENU_  "{% trans %}Guías{% endtrans %}" por página',
                "zeroRecords": "<div style=\"color:red;\">Lo siento no se encontraron {% trans %}Guías{% endtrans %}</div>",
                "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ {% trans %}Guías{% endtrans %}",
                "infoEmpty": "No hay registros disponibles",
                "infoFiltered": "(Filtradas de un total de _MAX_ )",
                "searchPlaceholder": "Número/Remitente/Destinatario",
                "paginate" : {
                    first:    '«',
                    previous: '‹',
                    next:     '›',
                    last:     '»'
                }
            },
            "pagingType": "full_numbers",
            "sDom": '<"top"i>rt<"bottom"lp><"clear">',
            "fnDrawCallback": function(oSettings) {
                if ((oSettings._iDisplayLength >= oSettings.fnRecordsDisplay()) ||  (oSettings._iDisplayLength == -1)) {
                    $(oSettings.nTableWrapper).find('.dataTables_paginate').hide();
                } else {
                    $(oSettings.nTableWrapper).find('.dataTables_paginate').show();
                }
            },
        });
        $('#globalfilter').on( 'keyup', function () {
            thisGuideTable.draw();
        } );
        {% if app.user.agency.type == "MASTER" %}
            $('#findAgency').change( function () {
                if (this.value == "Todas" ) {
                    thisGuideTable.columns( 7 ).search('').draw();
                } else {
                    thisGuideTable.columns( 7 ).search( this.value ).draw();
                }
            } );
        {% endif %}
        $('#mindate').change( function() { thisGuideTable.draw(); } );
        $('#maxdate').change( function() { thisGuideTable.draw(); } );
        $('.bupdate').hide();
        $('.bconsol').hide();

        // var nf = $('#guideTable tbody tr').length;
        var nf = thisGuideTable.rows().count();
        if ( nf > 0) {
            $('.bupdate').show();
            $('.bconsol').show();
        }

        $('#check-all').on('ifChecked', function(event){
            $('#check-none').iCheck('uncheck');
            $('#check-none').iCheck('update');
            var info = thisGuideTable.page.info();
            var page = info['page'];
            var length = info['length'];
            thisGuideTable.page.len( -1 ).draw();
            $('.checkclass').iCheck('check');
            $('.checkclass').iCheck('update');
            thisGuideTable.page.len(length);
            thisGuideTable.page(page).draw(false);
            
            /*
            console.log(info);
            var rows = $("#receiptTable").dataTable().$('tr', {"filter":"applied"});
            $(rows).each(function () {
                var data = thisGuideTable.row(this).data();
                var element = data[9];
                var id = '#recheck'+ element;
            });
            */
        });
        $('#check-none').on('ifChecked', function(event){
            $('#check-all').iCheck('uncheck');
            $('#check-all').iCheck('update');
            var info = thisGuideTable.page.info();
            var page = info['page'];
            var length = info['length'];
            thisGuideTable.page.len( -1 ).draw();
            $('.checkclass').iCheck('uncheck');
            $('.checkclass').iCheck('update');
            thisGuideTable.page.len(length);
            thisGuideTable.page(page).draw(false);
        });
        
        $('.checkclass').on('ifChecked', function(event){
            $('#check-none').iCheck('uncheck');
            $('#check-none').iCheck('update');
        });
        $('.checkclass').on('ifUnchecked', function(event){
            $('#check-all').iCheck('uncheck');
            $('#check-all').iCheck('update');
        });
        $('.bconsol').click(function(e) {
            e.preventDefault();
            var tableRef1 = document.getElementById('guideTable1').getElementsByTagName('tbody')[0];
            var count=0;
            thisGuideTable.$('tr').each(function(index,rowhtml){
                var checked = $('input[type="checkbox"]:checked',rowhtml).length;
                var data = thisGuideTable.row(rowhtml).data();
                // console.log(ii + ':' + checked);
                if (checked==1) {
                    count++;
                    var id = data[1];
                    var number = data[2];
                    var sender = data[3];
                    var addr = data[4];
                    var tdate = data[5];
                    var weight = data[6];
                    
                    var newRow   = tableRef1.insertRow(tableRef1.rows.length);
                    var newCell = newRow.insertCell(0);
                    var newCell0  = newRow.insertCell(1);
                    var newCell1  = newRow.insertCell(2);
                    var newCell2  = newRow.insertCell(3);
                    var newCell3  = newRow.insertCell(4);
                    var newCell4  = newRow.insertCell(5);

                    var newText = document.createTextNode(id);
                    newCell.appendChild(newText);
                    var newText0 = document.createTextNode(number);
                    newCell0.appendChild(newText0);
                    var newText1 = document.createTextNode(sender);
                    newCell1.appendChild(newText1);
                    var newText2 = document.createTextNode(addr);
                    newCell2.appendChild(newText2);
                    var newText3 = document.createTextNode(tdate);
                    newCell3.appendChild(newText3);
                    var newText4 = document.createTextNode(weight);
                    newCell4.appendChild(newText4);
                }
            });

            if (count == 0) {
                funalert('Debe escoger al menos 1 {% trans %}Guía{% endtrans %}');
                return false;
            }
            $("#consolguides").modal().show();
            thisGuideTable1=$('#guideTable1').DataTable({
                "ordering": false,
                "searching": false,
                "info":     false,
                "lengthChange": false,
                "paginate": false,
                "scrollY":        "200px",
                "scrollCollapse": true,
                "columnDefs": [ 
                    {   
                        "targets": [ 0 ],
                        "visible": false,
                    },
                ],
            });
        });
        $('#mydiv').width("100%");
        thisGuideTable.responsive.rebuild();
        thisGuideTable.responsive.recalc();
        thisGuideTable.draw(false);
        $( window ).resize(function() {
            thisGuideTable.responsive.rebuild();
            thisGuideTable.responsive.recalc();
            thisGuideTable.draw(false);
        });

        $("#consolguides").on("hidden.bs.modal", function () {
            thisGuideTable1.clear();
            thisGuideTable1.destroy();
        });
        $('.gotoconsol').click(function(e) {
            e.preventDefault();
            $("#closeconsol").click();
            var data1 = thisGuideTable1.rows().data();
            var nf = data1.length;
            var toconsol = [];
            for (i=0; i < nf; i++) {
                var id = data1[i][0];
                toconsol[i]=id;
            }
            var guidelist = JSON.stringify(toconsol);
            nguides = toconsol.length;
            var url = "{{ url('consolidated_guides') }}?guidelist=" + guidelist +"&idconsol={{ entity.id }}" ;
            if (nguides > 0 ) {
                window.location.href = url;
            } else {
                funalert('Debe escoger al menos 1 {% trans %}Guía{% endtrans %}');
            }
            return false;
        });
    });
</script>
{% endblock %}
