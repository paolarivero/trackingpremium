{% extends '::newbase.html.twig' %}

{% block title %}
    <title>Tipos de Pago</title>
{% endblock %}

{% block body -%}

<div class="page-aside app filters">
    <div class="content">
        <button data-target=".app-nav" data-toggle="collapse" type="button" class="navbar-toggle"><span class="fa fa-chevron-down"></span></button>
        <h2 class="page-title">Filtros</h2>
        <p class="description">Buscador Avanzado</p>
    </div>
    <div class="app-nav collapse">
        <div class="content">
            <div class="form-group">
                <label class="control-label">Desde:</label>
                <div data-min-view="2" data-date-format="mm/dd/yyyy" class="input-group date datetime">
                    <input id="mindate" size="16" type="text" value="" class="form-control"><span class="input-group-addon btn btn-primary"><span class="glyphicon glyphicon-th"></span></span>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label">Hasta:</label>
                <div data-min-view="2" data-date-format="mm/dd/yyyy" class="input-group date datetime">
                    <input id="maxdate" size="16" type="text" value="" class="form-control"><span class="input-group-addon btn btn-primary"><span class="glyphicon glyphicon-th"></span></span>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="pcont" class="container-fluid">
    <div class="main-app">
        <div class="head">
            <h3>Búsqueda</h3>
            <input type="text" id="globalfilter" placeholder="Nombre" class="form-control">
        </div>
        <div class="filters">
            <p style="display:inline;" id="currentdate"></p>
        </div>
        <div class="block-flat" style=" padding-top: 0px;">
            <div class="content" style=" padding-top: 0px;">
                {# <div id="mydiv" style="width: 60%"> #}
                    <table id="tpaidTable" class="table hover table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th>Descripción</th>
                                <th>Activo</th>
                                <th>Creación</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for entity in entities %}
                                <tr onclick="location.href='{{ path('paidtype_edit', { 'id': entity.id }) }}';">
                                    <td>{{ entity.name }}</td>
                                    <td>{{ entity.description }}</td>
                                    <td style="text-align:center;">
                                    {% if entity.active %}
                                        <input type="checkbox" checked="checked" disabled readonly >
                                    {% else %}
                                        <input type="checkbox" disabled readonly >
                                    {% endif %}</td>
                                    <td>{% if entity.creationdate %}{{ entity.creationdate|date('m/d/Y') }}{% endif %}</td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                    <table class="no-border">
                        <tbody class="no-border-y">
                            <tr>
                            <td>
                                <button type="button" onClick="history.go(-1);return true;" class="btn btn-default" >Regresar</button>
                            </td>
                            <td style="text-align:right;">
                                <button type="button" class="btn btn-info btn-flat" onClick="location.href='{{ path('paidtype_new') }}';">Crear Nuevo</button>
                            </td>
                            </tr>
                        </tbody>
                    </table>
                {# </div> #}
                
            </div>
        </div> 
    </div>
</div>


{% endblock %}
{% block javascripts %}

<script type="text/javascript">
    function formatDate(date) {
        var monthNames = [
            "Enero", "Febrero", "Marzo",
            "Abril", "Mayo", "Junio", "Julio",
            "Agosto", "Septiembre", "Octubre",
            "Noviembre", "Diciembre"
        ];

        var day = date.getDate();
        var monthIndex = date.getMonth();
        var year = date.getFullYear();

        return day + ' de ' + monthNames[monthIndex] + ' ' + year;
    }
    function searchBis(str_search) {
        var ret = $($.parseHTML(str_search)).text().toLowerCase();
        return ret.indexOf($('#globalfilter').val().toLowerCase()) != -1;
    }
    $.fn.dataTable.ext.search.push(
        function( settings, data, dataIndex ) {
        if ($('#globalfilter').val().trim() != '') {
            var ret0 = searchBis(data[0]);
            return ( ret0 );
        } else {
            return true;
        }

    });
    $.fn.dataTableExt.afnFiltering.push(
        function( oSettings, aData, iDataIndex ) {
            var iFini = document.getElementById('mindate').value;
            var iFfin = document.getElementById('maxdate').value;
            var iStartDateCol = 3;
            var iEndDateCol = iStartDateCol;
            iFini=iFini.substring(6,10) + iFini.substring(0,2)+ iFini.substring(3,5);
            iFfin=iFfin.substring(6,10) + iFfin.substring(0,2)+ iFfin.substring(3,5);
            var datofini=aData[iStartDateCol].substring(6,10) + aData[iStartDateCol].substring(0,2)+ aData[iStartDateCol].substring(3,5);
            var datoffin= datofini;

            if ( iFini === "" && iFfin === "" ) {
                return true;
            } else if ( iFini <= datofini && iFfin === "") {
                return true;
            } else if ( iFfin >= datoffin && iFini === "") {
                return true;
            } else if (iFini <= datofini && iFfin >= datoffin) {
                return true;
            }
            return false;
        }
    );
    $(document).ready(function () {
        document.getElementById("currentdate").innerHTML = formatDate(new Date());
        $thisTpaidTable=$('#tpaidTable').DataTable({
            "ordering": true,
            "searching": true,
            "info":     false,
            "lengthChange": true,
            "scrollX": true,
            "pageLength": 10,
            "lengthMenu": [[10, 15, 20, 25, 30, -1], [10, 15, 20, 25, 30, "Todos"]],
            "columns": [  null, {"searchable": false},{"searchable": false}, null,],
            // "columnDefs": [ {"targets": 0, "visible": false} ],
            "language": {
                "sSearch": "Buscar",
                "lengthMenu": 'Mostrando  _MENU_  "Tipos de Pago" por página',
                "zeroRecords": "<div style=\"color:red;\">Lo siento no se encontraron Tipos de Pago</div>",
                "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ Tipos de Pago",
                "infoEmpty": "No hay registros disponibles",
                "infoFiltered": "(Filtradas de un total de _MAX_ )",
                "searchPlaceholder": "Número/Remitente/Destinatario",
                "paginate" : {
                    first:    '«',
                    previous: '‹',
                    next:     '›',
                    last:     '»'
                }
            },
            "pagingType": "full_numbers",
            "sDom": '<"top"i>rt<"bottom"lp><"clear">',
            "fnDrawCallback": function(oSettings) {
                if ((oSettings._iDisplayLength >= oSettings.fnRecordsDisplay()) ||  (oSettings._iDisplayLength == -1)) {
                    $(oSettings.nTableWrapper).find('.dataTables_paginate').hide();
                } else {
                    $(oSettings.nTableWrapper).find('.dataTables_paginate').show();
                }
            },
        });
        $('#globalfilter').on( 'keyup', function () {
            $thisTpaidTable.draw();
        } );
        
        $('#tfecha').change( function() {
            if ($('#mindate').val() || $('#maxdate').val() ) {
                $thisTpaidTable.draw();
            }
        });
        $('#mindate').change( function() { $thisTpaidTable.draw(); } );
        $('#maxdate').change( function() { $thisTpaidTable.draw(); } );
        
        // $('#mydiv').width("100%");
        $thisTpaidTable.responsive.rebuild();
        $thisTpaidTable.responsive.recalc();
        // $thisTpaidTable.draw();
        $( window ).resize(function() {
            $thisTpaidTable.responsive.rebuild();
            $thisTpaidTable.responsive.recalc();
            // $thisTpaidTable.draw();
        });
    });
</script>
{% endblock %}
